using System;
using System.Collections.Generic;

class Program
{
    // Список для хранения коэффициентов уравнений системы
    static List<List<double>> sole;

    // Метод для инициализации системы уравнений
    // Аргументом является список пар значений (x, y)
    static void Init(List<Tuple<double, double>> f)
    {
        // Определяем количество точек (элементов списка)
        int n = f.Count;

        // Создаем матрицу `sole` размером n на (n+1), так как
        // последняя колонка предназначена для значений y (вектор свободных членов)
        sole = new List<List<double>>(n);

        // Инициализируем каждую строку матрицы `sole` длиной n + 1
        for (int i = 0; i < n; i++)
        {
            sole.Add(new List<double>(new double[n + 1]));
        }

        // Заполняем последнюю колонку матрицы значениями y из пары (x, y)
        for (int i = 0; i < n; i++)
        {
            sole[i][n] = f[i].Item2; // Item2 - это значение y в паре (x, y)
        }

        // Заполняем оставшиеся колонки степенями x
        // В каждой строке коэффициенты связаны с соответствующим x
        for (int i = 0; i < n; i++)
        {
            double x = 1; // Начинаем с x^0 = 1
            for (int j = n - 1; j >= 0; j--)
            {
                sole[i][j] = x;  // Присваиваем значение x^j (степень x)
                x *= f[i].Item1; // Умножаем x на значение x для следующей степени
            }
        }
    }

    // Метод, содержащий основную логику программы
    static void Solve()
    {
        // Задаем список точек (x, y) в формате пар (Tuple<double, double>)
        // Эти точки используются для инициализации системы уравнений
        List<Tuple<double, double>> f = new List<Tuple<double, double>>
        {
            Tuple.Create(-2.0, -8.0),  // Пара (x = -2, y = -8)
            Tuple.Create(-1.0, -1.0),  // Пара (x = -1, y = -1)
            Tuple.Create(0.0, 0.0),    // Пара (x = 0, y = 0)
            Tuple.Create(2.0, 8.0)     // Пара (x = 2, y = 8)
        };

        // Выводим значения первой компоненты (x) всех пар
        foreach (var x in f)
        {
            Console.Write(x.Item1 + "\t");  // Item1 - это значение x
        }
        Console.WriteLine();  // Переход на новую строку после вывода всех x

        // Выводим значения второй компоненты (y) всех пар
        foreach (var x in f)
        {
            Console.Write(x.Item2 + "\t");  // Item2 - это значение y
        }
        Console.WriteLine("\n");  // Переход на новую строку и добавляем пустую строку для разделения

        // Инициализируем систему уравнений на основе точек f
        Init(f);

        // Выводим матрицу `sole`, которая была сформирована
        // Это система уравнений в матричной форме
        foreach (var row in sole)  // Проходим по каждой строке матрицы
        {
            foreach (var x in row)  // Проходим по каждой ячейке в строке
            {
                Console.Write(x + "\t");  // Выводим значение с табуляцией для форматирования
            }
            Console.WriteLine();  // Переход на новую строку после каждой строки матрицы
        }
    }

    // Главная точка входа в программу
    static void Main(string[] args)
    {
        Console.WriteLine("Output:");  // Сообщение перед выводом результатов
        Solve();  // Вызов основной функции для решения задачи
    }
}
